var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ITensorTDVP","category":"page"},{"location":"#ITensorTDVP","page":"Home","title":"ITensorTDVP","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ITensorTDVP.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ITensorTDVP]","category":"page"},{"location":"#ITensorTDVP.tdvp-Tuple{ITensors.MPO, ITensors.MPS, Number, ITensors.Sweeps}","page":"Home","title":"ITensorTDVP.tdvp","text":"tdvp(H::MPO,psi0::MPS,t::Number,sweeps::Sweeps; kwargs...)\n\nUse the time dependent variational principle (TDVP) algorithm to compute exp(t*H)*psi0 using an efficient algorithm based on alternating optimization of the MPS tensors and local Krylov exponentiation of H.\n\nReturns:\n\npsi::MPS - time-evolved MPS\n\nOptional keyword arguments:\n\noutputlevel::Int = 1 - larger outputlevel values resulting in printing more information and 0 means no output\nobserver - object implementing the Observer interface which can perform measurements and stop DMRG early\nwrite_when_maxdim_exceeds::Int - when the allowed maxdim exceeds this value, begin saving tensors to disk to free memory in large calculations\n\n\n\n\n\n","category":"method"},{"location":"#ITensorTDVP.tdvp-Tuple{Vector{ITensors.MPO}, ITensors.MPS, Number, ITensors.Sweeps}","page":"Home","title":"ITensorTDVP.tdvp","text":"tdvp(Hs::Vector{MPO},psi0::MPS,t::Number,sweeps::Sweeps;kwargs...)\n\nUse the time dependent variational principle (TDVP) algorithm to compute exp(t*H)*psi0 using an efficient algorithm based on alternating optimization of the MPS tensors and local Krylov exponentiation of H.\n\nThis version of tdvp accepts a representation of H as a Vector of MPOs, Hs = [H1,H2,H3,...] such that H is defined as H = H1+H2+H3+... Note that this sum of MPOs is not actually computed; rather the set of MPOs [H1,H2,H3,..] is efficiently looped over at  each step of the DMRG algorithm when optimizing the MPS.\n\nReturns:\n\npsi::MPS - time-evolved MPS\n\n\n\n\n\n","category":"method"}]
}
